''' 인접행렬을 이용하는 방법'''

# 어떤 두 간선이 연결되어있는지를 O(1)에 알수있고, O(V^2)의 공간복잡도
# 가령 정점이 10000개라면 O(V^2)의 공간복잡도로 인해 메모리초과가능성 높음.
# 관례상 노드를 0이 아닌 1부터 표현함.
''' 두 점의 연결여부를 자주 확인할때
    E가 V^2에 가까울때 주로 사용    '''
adj_maxtrix = [[0,0,0,0,0],
               [0,0,1,1,0],
               [1,0,0,0,1],
               [1,0,0,0,0],
               [0,1,0,1,0]]   # 방향그래프 : [1][3]=1 이라는건 
                              #             2번째노드에서 4번째 노드로 가는 간선이 1개 존재
 
adj_matrix2 = [[0,0,1,1,0],
               [0,0,1,1,0],
               [1,1,0,0,1],
               [1,1,0,0,1],
               [0,1,1,1,0]]   # 무방향그래프 얘는 대칭행렬임



'''인접리스트 이용방법'''

# 정점이 많고 간선이 상대적으로 적을때 사용.
# 리스트가 V개 필요하고, 간선이 1개있을때마다 1개의 원소가 추가됨(방향이 없을시 2개).
# 공간복잡도 O(V+E) 메모리 관리하기엔 좋다.
'''특정 정점에 연결된 모든 정점을 자주 확인할때
   E가 V^2보다 훨씬 작을때 사용                 '''
adj_list = [[],[],[],[]]